{
  "openapi": "3.0.1",
  "info": {
    "title": "Users CRUD interface",
    "description": "Specification of the CRUD interface",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Users management operations (CRUD)."
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get users list",
        "description": "Gets all users data",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Codes: USER_ALREADY_EXISTS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create",
        "description": "Create new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User object that has to be added",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Codes: USER_ALREADY_EXISTS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user",
        "description": "Gets specified user data",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Codes: USER_ALREADY_EXISTS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "description": "Update user data",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "Removes user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "age",
          "citizenship",
          "name",
          "personalId",
          "surname"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Elon"
          },
          "surname": {
            "type": "string",
            "example": "Musk"
          },
          "age": {
            "minimum": 1,
            "type": "integer",
            "example": 10
          },
          "personalId": {
            "pattern": "^[0-9]{11}$",
            "type": "string",
            "example": "92011165987"
          },
          "citizenship": {
            "pattern": "^[A-Z]{2}$",
            "type": "string",
            "example": "PL",
            "enum": [
              "PL",
              "DE",
              "UK"
            ]
          },
          "email": {
            "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
            "type": "string",
            "example": "e_musk@gmail.com"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Error": {
        "required": [
          "code",
          "responseHeader"
        ],
        "type": "object",
        "properties": {
          "responseHeader": {
            "$ref": "#/components/schemas/ResponseHeader"
          },
          "code": {
            "type": "string",
            "example": "NOT_FOUND"
          },
          "message": {
            "type": "string",
            "example": "Resource doesn't exist"
          }
        }
      },
      "RequestHeader": {
        "required": [
          "requestId",
          "sendDate"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid"
          },
          "sendDate": {
            "type": "string",
            "description": "Date format according to ISO_8601 for example: yyyy-MM-dd'T'HH:mm:ss.SSSZ",
            "format": "date-time"
          }
        }
      },
      "ResponseHeader": {
        "required": [
          "requestId",
          "sendDate"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid"
          },
          "sendDate": {
            "type": "string",
            "description": "Date format according to ISO_8601 for example: yyyy-MM-dd'T'HH:mm:ss.SSSZ",
            "format": "date-time"
          }
        }
      },
      "CreateRequest": {
        "required": [
          "requestHeader",
          "user"
        ],
        "type": "object",
        "properties": {
          "requestHeader": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UpdateRequest": {
        "required": [
          "requestHeader",
          "user"
        ],
        "type": "object",
        "properties": {
          "requestHeader": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserResponse": {
        "required": [
          "responseHeader",
          "user"
        ],
        "type": "object",
        "properties": {
          "responseHeader": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserListResponse": {
        "required": [
          "responseHeader",
          "usersList"
        ],
        "type": "object",
        "properties": {
          "responseHeader": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "usersList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "apiKey",
        "name": "Bearer",
        "in": "header"
      }
    }
  }
}